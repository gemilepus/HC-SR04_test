C51 COMPILER V9.00   01                                                                    12/24/2015 15:57:01 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 01
OBJECT MODULE PLACED IN 01.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 01.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //*******************************************************************
   2          // CPU : Megawin MPC89x515A @ 11.0592 MHz
   3          //*******************************************************************
   4          #include "82GXX.H"
   5          #include "bin.c"
   6          //********************** functions ***************************
   7          void delay_1ms(int count);
   8          void trig_out(void);
   9          void LEDTypeError(void);
  10          void LEDTypeLoad(void);
  11          //********************** Parameter ***************************
  12          sbit trigPin = P3^0;
  13          sbit echoPin = P3^1;
  14          char code Column_Scan[4]= {0x7F,0xBF,0xDF,0xEF};
  15          char code Seg_Row_Data[19]= { 0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x98,0x88,0x83,0xC6,0xA1,0x86,0
             -x8E,0x92,0x8C,0xF7};//0~F
  16          //********************** Variables ***************************
  17          main()
  18          { 
  19   1      int i=0,LED_TEMP[4]={0,0,0,0},TEMP,deTime=0,KeydeTime=6000,cnt,chcnt,cuta,cutb,OFFLED=0;
  20   1      int A_KEY=0,F_KEY=0,E_KEY=0,Key_Scan,Command_SCAN,KET_TEMP[4]={0,0,0,0};
  21   1        trigPin = 0;
  22   1      while(1)
  23   1      {   P2=0xFF;
  24   2          if(i==1&&OFFLED==0){
  25   3            P0=Seg_Row_Data[LED_TEMP[i]]^0x80;
  26   3        }
  27   2        else{
  28   3          P0=Seg_Row_Data[LED_TEMP[i]];
  29   3        }
  30   2          P2=Column_Scan[i];
  31   2          Key_Scan=P2&0x0F;
  32   2          if(KeydeTime!=0)KeydeTime--; 
  33   2          if((Key_Scan!=0x0F)&&(KeydeTime==0)){   
  34   3              KeydeTime=6000;
  35   3            if (Key_Scan==0x07) {
  36   4                TEMP=i*4;//0 4 8 12 ~ 0 4 8 C
  37   4          }
  38   3              else if(Key_Scan==0x0B){
  39   4                TEMP=i*4+1;//1 5 9 13 ~ 1 5 9 D
  40   4          } 
  41   3              else if(Key_Scan==0x0D){
  42   4                TEMP=i*4+2;//2 6 10 14 ~ 2 6 A E
  43   4          } 
  44   3              else if(Key_Scan==0x0E){
  45   4                TEMP=i*4+3;//3 7 11 15 ~ 3 7 B F
  46   4          }
  47   3          if(TEMP<10){
  48   4            KET_TEMP[3]=KET_TEMP[2];
  49   4            KET_TEMP[2]=KET_TEMP[1];
  50   4            KET_TEMP[1]=KET_TEMP[0];
  51   4            KET_TEMP[0]=TEMP;
  52   4          }
  53   3          else{
  54   4            Command_SCAN=TEMP;
C51 COMPILER V9.00   01                                                                    12/24/2015 15:57:01 PAGE 2   

  55   4          }
  56   3          }    
  57   2        if(Command_SCAN!=0){  
  58   3             if(Command_SCAN==10){// A «ùÄò´ú¶Z 
  59   4                A_KEY=1;
  60   4           }
  61   3             if(Command_SCAN==11){// B ¼È°±´ú¶Z 
  62   4                A_KEY=0;
  63   4           }     
  64   3             if(Command_SCAN==12){// C µ²§ô 
  65   4                A_KEY=0;
  66   4                E_KEY=0;
  67   4                F_KEY=0;
  68   4                LED_TEMP[3]=LED_TEMP[2]=LED_TEMP[1]=LED_TEMP[0]=0; 
  69   4           }
  70   3             if(Command_SCAN==15){// F  
  71   4                A_KEY=0;
  72   4                F_KEY=1;
  73   4           }   
  74   3             if(Command_SCAN==14){// E
  75   4              LEDTypeLoad();  
  76   4                chcnt=KET_TEMP[3]*1000+KET_TEMP[2]*100+KET_TEMP[1]*10+KET_TEMP[0];
  77   4                if(chcnt>=1500||F_KEY==0){
  78   5                   LEDTypeError();
  79   5            }
  80   4            else{
  81   5               F_KEY=0;
  82   5               E_KEY=1;
  83   5            }
  84   4           }                
  85   3           Command_SCAN=0;
  86   3        }
  87   2        if(E_KEY==1&&deTime==4000){//
  88   3        deTime=0;cnt=0;
  89   3        trig_out();
  90   3        while(echoPin == 0);  
  91   3        while(echoPin == 1 && cnt < 3000){
  92   4          cnt++;
  93   4        } 
  94   3        cuta=(chcnt*9)/10;
  95   3        cutb=(chcnt*11)/10;
  96   3        if(cnt>=cuta&&cnt<=cutb){
  97   4            LED_TEMP[3]=17;
  98   4            LED_TEMP[2]=10;
  99   4            LED_TEMP[1]=16;
 100   4            LED_TEMP[0]=16; 
 101   4            OFFLED=1;   
 102   4        }
 103   3        else{
 104   4            LED_TEMP[3]=cnt/1000;
 105   4            LED_TEMP[2]=cnt% 1000 / 100;
 106   4            LED_TEMP[1]=cnt% 100 / 10;
 107   4            LED_TEMP[0]=cnt%10; 
 108   4          OFFLED=0;   
 109   4               if(cnt>=3000){
 110   5            LED_TEMP[3]=18;
 111   5            LED_TEMP[2]=18;
 112   5            LED_TEMP[1]=18;
 113   5            LED_TEMP[0]=18; 
 114   5         }    
 115   4        }      
 116   3          } 
C51 COMPILER V9.00   01                                                                    12/24/2015 15:57:01 PAGE 3   

 117   2        if(F_KEY==1){//
 118   3            LED_TEMP[3]=KET_TEMP[3];
 119   3            LED_TEMP[2]=KET_TEMP[2];
 120   3            LED_TEMP[1]=KET_TEMP[1];
 121   3            LED_TEMP[0]=KET_TEMP[0];     
 122   3          }       
 123   2          if(deTime<4000)deTime++;
 124   2          if(A_KEY==1&&deTime==4000){
 125   3        deTime=0;cnt=0;
 126   3        trig_out();
 127   3        while(echoPin == 0);  
 128   3        while(echoPin == 1 && cnt < 3000){
 129   4          cnt++;
 130   4        } 
 131   3          LED_TEMP[3]=cnt/1000;
 132   3          LED_TEMP[2]=cnt% 1000 / 100;
 133   3          LED_TEMP[1]=cnt% 100 / 10;
 134   3          LED_TEMP[0]=cnt%10;
 135   3           if(cnt>=3000){
 136   4            LED_TEMP[3]=18;
 137   4            LED_TEMP[2]=18;
 138   4            LED_TEMP[1]=18;
 139   4            LED_TEMP[0]=18; 
 140   4         }
 141   3          }
 142   2        i++;if(i==4)i=0;
 143   2      }
 144   1      }
 145          //-----------------------------------------------------------------
 146          void trig_out()
 147          { 
 148   1        int i;
 149   1        trigPin = 1;
 150   1        for(i = 0; i < 125; i ++);   
 151   1        trigPin = 0;
 152   1      }
 153          void LEDTypeLoad(void){
 154   1        int f;
 155   1        for(f=3;f>=0;f--){
 156   2          P2=Column_Scan[f];
 157   2            P0=B1111_1011;delay_1ms(150);
 158   2                  P0=B1111_1101;delay_1ms(150);
 159   2                  P0=B1111_1110;delay_1ms(150);
 160   2                  P0=B1101_1111;delay_1ms(150);
 161   2                  P0=B1110_1111;delay_1ms(150);
 162   2                  P0=B1111_1111;delay_1ms(150);
 163   2                  P0=B0111_1111;delay_1ms(150); 
 164   2              }
 165   1      }
 166          void LEDTypeError(void){
 167   1        char code Errortype[13]={0xFF,0xFF,0xFF,0xFF,0x86,0xAF,0xAF,0xA3,0xAF,0xFF,0xFF,0xFF,0xFF};
 168   1        int i=0,j=0,k=3,deTime=0;;
 169   1        while(1) {
 170   2          P2=0xFF;
 171   2          P0=Errortype[j+k];
 172   2            P2=Column_Scan[i];
 173   2            deTime++;
 174   2            if(deTime==6000){
 175   3                j++;
 176   3              deTime=0; 
 177   3          }
 178   2            if(j==10)break;
C51 COMPILER V9.00   01                                                                    12/24/2015 15:57:01 PAGE 4   

 179   2            i++;if(i==4)i=0;
 180   2            k--;if(k==-1)k=3;
 181   2        }
 182   1      }
 183          void delay_1ms(int count)
 184          { int i,j;
 185   1         for(i=0;i<count;i++) for(j=0;j<40;j++);
 186   1      }
*** WARNING C316 IN LINE 186 OF 01.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1350    ----
   CONSTANT SIZE    =     52    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      44
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
